#!/usr/bin/env python3
"""
Script pour initialiser les cat√©gories d'articles de stock
"""
import sys
from pathlib import Path

# Ajouter le r√©pertoire parent au path
sys.path.insert(0, str(Path(__file__).parent.parent))

from app.db.session import engine, get_session
from sqlmodel import SQLModel, select
from app.models.stock import CategorieArticle, Fournisseur

def init_categories():
    """Cr√©er les cat√©gories par d√©faut"""
    
    # Cr√©er les tables si n√©cessaire
    SQLModel.metadata.create_all(engine)
    
    session = next(get_session())
    
    # Cat√©gories par d√©faut
    categories_default = [
        {"code": "FOUR", "libelle": "Fournitures de Bureau", "description": "Papier, stylos, classeurs, etc."},
        {"code": "INFO", "libelle": "Mat√©riel Informatique", "description": "Ordinateurs, imprimantes, accessoires IT"},
        {"code": "MOBI", "libelle": "Mobilier", "description": "Bureaux, chaises, armoires, etc."},
        {"code": "CONS", "libelle": "Consommables", "description": "Cartouches, toners, produits d'entretien"},
        {"code": "ELEC", "libelle": "√âlectronique", "description": "T√©l√©phones, tablettes, √©quipements √©lectroniques"},
        {"code": "ENTRE", "libelle": "Entretien", "description": "Produits de nettoyage et maintenance"},
        {"code": "AUTRE", "libelle": "Autres", "description": "Articles divers"}
    ]
    
    for cat_data in categories_default:
        # V√©rifier si existe d√©j√†
        existing = session.exec(
            select(CategorieArticle).where(CategorieArticle.code == cat_data["code"])
        ).first()
        if not existing:
            cat = CategorieArticle(**cat_data)
            session.add(cat)
            print(f"‚úÖ Cat√©gorie cr√©√©e : {cat_data['libelle']}")
        else:
            print(f"‚ÑπÔ∏è  Cat√©gorie existe d√©j√† : {cat_data['libelle']}")
    
    session.commit()
    print("\n‚úÖ Initialisation des cat√©gories termin√©e !")
    
    # Afficher le r√©sultat
    total = session.exec(select(CategorieArticle)).all()
    print(f"üìä Total cat√©gories : {len(total)}")


def init_fournisseurs_exemple():
    """Cr√©er des fournisseurs d'exemple (optionnel)"""
    
    session = next(get_session())
    
    fournisseurs_exemple = [
        {
            "code": "F001",
            "nom": "Papeterie Centrale",
            "telephone": "+221 33 123 45 67",
            "email": "contact@papeterie-centrale.sn",
            "adresse": "Dakar, S√©n√©gal"
        },
        {
            "code": "F002",
            "nom": "Informatique Pro",
            "telephone": "+221 33 987 65 43",
            "email": "info@informatique-pro.sn",
            "adresse": "Dakar, S√©n√©gal"
        }
    ]
    
    for f_data in fournisseurs_exemple:
        existing = session.exec(
            select(Fournisseur).where(Fournisseur.code == f_data["code"])
        ).first()
        if not existing:
            f = Fournisseur(**f_data)
            session.add(f)
            print(f"‚úÖ Fournisseur cr√©√© : {f_data['nom']}")
        else:
            print(f"‚ÑπÔ∏è  Fournisseur existe d√©j√† : {f_data['nom']}")
    
    session.commit()
    print("\n‚úÖ Initialisation des fournisseurs termin√©e !")


if __name__ == "__main__":
    print("üöÄ Initialisation du syst√®me de gestion des stocks\n")
    print("=" * 60)
    
    init_categories()
    print("\n" + "=" * 60)
    
    # D√©commenter si vous voulez aussi cr√©er des fournisseurs d'exemple
    # init_fournisseurs_exemple()
    
    print("\n‚úÖ Initialisation termin√©e avec succ√®s !")


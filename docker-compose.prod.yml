# docker-compose.prod.yml - Production (PostgreSQL + Nginx + Redis)
# Version obsol√®te - Docker Compose moderne n'en a plus besoin

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: mppeep-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-mppeep}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?POSTGRES_PASSWORD requis}
      - POSTGRES_DB=${POSTGRES_DB:-mppeep_prod}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mppeep} -d ${POSTGRES_DB:-mppeep_prod}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mppeep-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Application MPPEEP
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: mppeep:latest  # üè∑Ô∏è Nom de l'image
    container_name: mppeep-app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-mppeep}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-mppeep_prod}
      - SECRET_KEY=${SECRET_KEY:?SECRET_KEY requis}
      - DEBUG=False
      - APP_NAME=MPPEEP Dashboard
      - APP_VERSION=1.0.0
      - ACCESS_TOKEN_EXPIRE_MINUTES=1440
      - CORS_ORIGINS=["https://mppeep.gov","https://www.mppeep.gov"]
    volumes:
      - mppeep-logs:/app/logs
      - mppeep-uploads:/app/static/uploads
    expose:
      - "9000"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mppeep-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mppeep-nginx
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploiement_docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - mppeep-uploads:/usr/share/nginx/html/uploads:ro
      - ./app/static:/usr/share/nginx/html/static:ro
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mppeep-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache (optionnel)
  redis:
    image: redis:7-alpine
    container_name: mppeep-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - mppeep-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres-data:
    driver: local
  mppeep-logs:
    driver: local
  mppeep-uploads:
    driver: local
  redis-data:
    driver: local

networks:
  mppeep-network:
    driver: bridge

